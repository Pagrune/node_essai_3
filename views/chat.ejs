<%- include('layout.ejs'); %>
<!-- Include the Socket.IO library from the CDN -->
<script src="http://localhost:4111/socket.io/socket.io.js"></script>

<div id="chat-container">
    <div id="chat-messages">
        <!-- Zone to display chat messages -->
        <% for (let i = 0; i < messages.length; i++) { %>
            <div>
                <%= messages[i].timestamp %>
                <%= messages[i].user %>: <%= messages[i].content %>
            </div>
        <% } %>
    </div>
    <div>
        <input
            placeholder='Message...'
            id="message-input"
        />
        <button class='btn btn-primary' id="send-button">
            Send Message
        </button>
    </div>
</div>

<script>
    const socket = io.connect('http://localhost:4111');
    const chatMessagesContainer = document.getElementById('chat-messages');
    const messageInput = document.getElementById('message-input');
    const room = new URLSearchParams(window.location.search).get('room');
    const username = '<%= user.name %>';
    const messagesReceived = [];
    

    // Function to add a message to the messages container
    function addMessageToContainer(message) {
        const messageElement = document.createElement('div');
        const messageDateElement = document.createElement('div');

        // Set the content of the message element
        messageElement.textContent = `${message.username}: ${message.message}`;

        // Set the content of the date element
        const messageDate = new Date(message.__createdtime__).toLocaleString();
        messageDateElement.textContent = messageDate;

        // Append both elements to the chatMessagesContainer
        chatMessagesContainer.appendChild(messageDateElement);
        chatMessagesContainer.appendChild(messageElement);
    }

    // Event listener when the DOM content is loaded
    document.addEventListener('DOMContentLoaded', () => {
        // Emit 'enterRoom' event with the room ID
        socket.emit('enterRoom', { room });
    });

    // Event listener for the 'receive_message' event
    socket.on('receive_message', (data) => {
        console.log(data);

        // Add the message to the list of received messages
        messagesReceived.push({
            message: data.message,
            username: data.username,
            __createdtime__: data.__createdtime__,
        });

        // Call the function to add the new message to the user interface
        addMessageToContainer(data);
    });

    // Event listener for the 'send_button' click
    document.querySelector('#send-button').addEventListener('click', sendMessage);

    // Function to send a message to the server
    function sendMessage() {
        const message = messageInput.value;
        if (message.trim() !== '') {
            const __createdtime__ = Date.now();
            socket.emit('send_message', { message, __createdtime__, room, username });
            messageInput.value = ''; // Clear the input field
        }
    }
</script>
