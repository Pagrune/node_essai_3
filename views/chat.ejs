<%- include('layout.ejs'); %>
<!-- Inclure la bibliothèque Socket.IO depuis le CDN -->
<script src="http://localhost:4111/socket.io/socket.io.js"></script>

<div id="chat-container">
    <div id="chat-messages">
        <!-- Zone pour afficher les messages du chat -->
    </div>
    <div>
        <input
            placeholder='Message...'
            id="message-input"
        />
        <button class='btn btn-primary' id="send-button">
            Send Message
        </button>
    </div>
</div>

<script>
    const socket = io.connect('http://localhost:4111');

    const messagesReceived = []; // Ajout de la déclaration
    const messageInput = document.getElementById('message-input'); // Assurez-vous que message-input est correctement défini dans votre HTML
    const chatMessagesContainer = document.getElementById('chat-messages');

    // récupérer la room depuis l'URL
    const urlParams = new URLSearchParams(window.location.search);
    const room = urlParams.get('room');

    // make a variable username from req.session.user.name
    const username = '<%= user.name %>';

    // Fonction pour ajouter un message à la div de messages
    function addMessageToContainer(message) {
        const messageElement = document.createElement('div');
        messageElement.textContent = `${message.username}: ${message.message}`;
        chatMessagesContainer.appendChild(messageElement);
    }

    socket.on('enterRoom', (data) => {
        console.log('Entered room message', data);
        messagesReceived.push({
            message: data.message,
            username: data.username,
            __createdtime__: data.__createdtime__,
        });

    // Appeler la fonction pour ajouter le nouveau message à l'interface utilisateur
        addMessageToContainer(data);
    });

    socket.on('receive_message', (data) => {
        console.log('Received message', data);
        messagesReceived.push({
            message: data.message,
            username: data.username,
            __createdtime__: data.__createdtime__,
        });

        // Appeler la fonction pour ajouter le nouveau message à l'interface utilisateur
        addMessageToContainer(data);
    });


    document.querySelector('#send-button').addEventListener('click', sendMessage);

    function sendMessage() {
        const message = messageInput.value;
        if (message.trim() !== '') {
            const __createdtime__ = Date.now();
            socket.emit('send_message', { message, __createdtime__, room, username });
            messageInput.value = ''; // Effacer le champ de saisie
        }
    }
</script>
